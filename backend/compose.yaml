networks:
  flight-network:
    driver: bridge
    name: flight-network
  kong-net:
    driver: bridge

volumes:
  pgdata:
    name: esd_pgdata 

services:
  user:
    build:
      context: ./atomicMicroservices/user
      dockerfile: Dockerfile
    image: edrictan/user:1.0
    container_name: user
    ports:
      - "5500:5500" 
    env_file: #env_file directive automatically loads the environment variables from the .env
      - .env # This loads the variables from .env file
    networks:
      - kong-net

  flight:
    build:
      context: ./atomicMicroservices/flightService
      dockerfile: Dockerfile
    image: edrictan/flight:2.0
    container_name: flight
    ports:
      - "5000:5000" #NOTE: rmb remove cause API gateway can access liao. reduce exposing as many ports 
    env_file: #env_file directive automatically loads the environment variables from the .env
      - .env # This loads the variables from .env file
    networks:
      - kong-net

  seat:
    build:
      context: ./atomicMicroservices/seatService
      dockerfile: Dockerfile
    image: edrictan/seat:1.0
    container_name: seat
    ports:
      - "8080:8080" #NOTE: rmb remove cause API gateway can access liao. reduce exposing as many ports
    networks:
      - kong-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker # Set the active profile to "docker"
    #   - dbURL=mysql+mysqlconnector://root@host.docker.internal:3306/book # set in example/resources/application.properties
  
# Start of Booking microservice...comment out for testing
  booking:
    build:
      context: ./atomicMicroservices/booking
      dockerfile: Dockerfile
    image: edrictan/booking:1.0
    container_name: booking
    ports:
      - "5001:5001" #NOTE: rmb remove cause API gateway can access liao. reduce exposing as many ports
    networks:
    - kong-net
  flex-seat:
    build:
      context: "./atomicMicroservices/Flex User"
      dockerfile: Dockerfile
    image: edrictan/flex-seat:1.0
    container_name: flex-seat
    ports:
      - "5003:5003" #NOTE: rmb remove cause API gateway can access liao. reduce exposing as many ports
    networks:
    - kong-net
  payment:
    build:
      context: "./atomicMicroservices/payment"
      dockerfile: Dockerfile
    image: edrictan/payment:1.0
    container_name: payment
    ports:
      - "5005:5005" #NOTE: rmb remove cause API gateway can access liao. reduce exposing as many ports
    networks:
    - kong-net


  #######################################
  # Composite Microservices: To spin them up
  #######################################
  book-flight:
    build:
      context: ./compositeMicroservices
      dockerfile: BookFlight/Dockerfile
    image: edrictan/book-flight:1.0
    container_name: book-flight
    ports:
      - "5002:5002" #NOTE: rmb remove cause API gateway can access liao. reduce exposing as many ports
    networks:
      - kong-net
    depends_on:
      - booking
      - seat

  # booking-management:
  #   build:
  #     context: ./compositeMicroservices/BookingManagement
  #     dockerfile: Dockerfile
  #   image: edrictan/booking-management:1.0
  #   container_name: booking-management
  #   ports:
  #     - "5090:5090"
  #   networks:
  #     - flight-network
  #     - kong-net
  #   environment:
  #     - FLIGHT_SERVICE_URL=http://flight:5000/flights
  #     - PAYMENT_SERVICE_URL=http://host.docker.internal:5005/api/payment/flex
  #     - SEAT_SERVICE_URL=http://seat:8080/seats
  #     - FLEX_SERVICE_URL=http://host.docker.internal:5003/flexseat
  #     - BOOKING_SERVICE_URL=http://booking:5001/booking
  #     - BOOK_FLIGHT_URL=http://book-flight:5002/book_flight

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:13
    platform: linux/amd64  # <- required for Mac M1 chip. Otherwise, can remove
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong/kong-gateway:3.9
    platform: linux/amd64  # <- required for Mac M1 chip. Otherwise, can remove
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong/kong-gateway:3.9
    platform: linux/amd64  # <- required for Mac M1 chip. Otherwise, can remove
    restart: always
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    depends_on:
      - kong-migration
    ports: # https://docs.konghq.com/gateway/latest/production/networking/default-ports/
      - "8000:8000" # Takes incoming HTTP traffic from Consumers, and forwards it to upstream Services.
      - "8001:8001" # Admin API. Listens for calls from the command line over HTTP.
      - "8002:8002" # Kong Manager (GUI). Listens for HTTP traffic.
  
  #######################################
  # Kong Config: Using DB-based for KONG aka changing config via GUI
  # This creates a container that auto syncs the KONG configs 
  #######################################
  deck-sync-kong-config:
    build:
      context: ./importKongConfig
    image: edrictan/deck-sync-kong-config:1.0
    container_name: deck-sync-kong-config
    networks:
      - kong-net
    depends_on:
      - kong

  #######################################
  # Konga: Kong GUI
  #######################################
  # konga:
  #   image: pantsel/konga
  #   container_name: konga
  #   restart: always
  #   networks:
  #     - kong-net
  #   environment:
  #     # NODE_ENV: development
  #     DB_ADAPTER: postgres
  #     DB_HOST: kong-database
  #     DB_PORT: 5432
  #     DB_USER: kong
  #     DB_PASSWORD: password
  #     DB_DATABASE: konga_db
  #   ports:
  #     - "1338:1337"
  #   depends_on:
  #     - kong
  #     - wait-for-db
  #   # entrypoint:
  #   #   - /bin/sh
  #   #   - -c
  #   #   - "sleep 5 && npm start"

  # wait-for-db:
  #   image: busybox
  #   depends_on:
  #     - kong-database
  #   command: sh -c "until nc -z kong-database 5432; do echo waiting for db...; sleep 2; done;"
  #   networks:
  #     - kong-net


